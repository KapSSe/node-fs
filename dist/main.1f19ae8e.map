{"version":3,"sources":["scripts/http.js","scripts/form.js","main.js"],"names":["HTTP","data","method","req","XMLHttpRequest","url","payload","open","async","send","onreadystatechange","readyState","status","console","log","responseText","FormHandler","selector","formsState","http","initListeners","document","querySelectorAll","selectForms","forEach","form","addEventListener","e","eventListener","target","nodeName","preventDefault","constructor","currentTarget","id","querySelector","value","onLoaded","formHandler","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACqBA;;;;;;;;;yBACPC,MAAM;AAChB,WAAKA,IAAI,CAACC,MAAV,EAAkBD,IAAlB;AACD;;;wBAEUA,MAAM;AACf,UAAME,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,UAAMC,GAAG,aAAMJ,IAAI,CAACI,GAAX,cAAkBJ,IAAI,CAACK,OAAvB,CAAT;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASN,IAAI,CAACC,MAAd,EAAsBG,GAAtB,EAA2BJ,IAAI,CAACO,KAAhC;AACAL,MAAAA,GAAG,CAACM,IAAJ;;AACAN,MAAAA,GAAG,CAACO,kBAAJ,GAAyB,YAAM;AAC7B,YAAIP,GAAG,CAACQ,UAAJ,KAAmB,CAAvB,EAA0B;AACxB,cAAIR,GAAG,CAACS,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,YAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACY,YAAhB;AACD;AACF;AACF,OAND;AAOD;;;yBAEWd,MAAM;AAChBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD;;;2BAEaA,MAAM;AAClB,UAAME,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,UAAMC,GAAG,aAAMJ,IAAI,CAACI,GAAX,cAAkBJ,IAAI,CAACK,OAAvB,CAAT;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASN,IAAI,CAACC,MAAd,EAAsBG,GAAtB,EAA2BJ,IAAI,CAACO,KAAhC;AACAL,MAAAA,GAAG,CAACM,IAAJ;;AACAN,MAAAA,GAAG,CAACO,kBAAJ,GAAyB,YAAM;AAC7B,YAAIP,GAAG,CAACQ,UAAJ,KAAmB,CAAvB,EAA0B;AACxB,cAAIR,GAAG,CAACS,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,YAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACY,YAAhB;AACD;AACF;AACF,OAND;AAOD;;;;;;;;;;;;;;;ACpCH;;;;;;;;;;IAEqBC;;;AACnB,uBAAYC,QAAZ,EAAsB;AAAA;;AACpB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,IAAL,GAAY,IAAInB,aAAJ,EAAZ;AACD;;;;2BAEM;AACL,WAAKoB,aAAL;AACD;;;kCAEa;AACZ,aAAOC,QAAQ,CAACC,gBAAT,CAA0B,KAAKL,QAA/B,CAAP;AACD;;;oCAEe;AAAA;;AACd,WAAKM,WAAL,GAAmBC,OAAnB,CAA2B,UAACC,IAAD,EAAU;AACnCA,QAAAA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAACC,CAAD,EAAO;AACpC,UAAA,KAAI,CAACC,aAAL,CAAmBD,CAAnB;AACD,SAFD;AAGD,OAJD;AAKD;;;kCAEaA,GAAG;AACf,UAAIA,CAAC,CAACE,MAAF,CAASC,QAAT,KAAsB,QAA1B,EAAoC;AAClCH,QAAAA,CAAC,CAACI,cAAF;AACA,aAAKZ,IAAL,CAAUa,WAAV,CAAsBzB,IAAtB,CAA2B;AACzBL,UAAAA,MAAM,EAAEyB,CAAC,CAACM,aAAF,CAAgBC,EADC;AAEzB7B,UAAAA,GAAG,EAAE,uBAFoB;AAGzBG,UAAAA,KAAK,EAAE,IAHkB;AAIzBF,UAAAA,OAAO,EAAEqB,CAAC,CAACM,aAAF,CAAgBE,aAAhB,CAA8B,OAA9B,EAAuCC;AAJvB,SAA3B;AAMD;AACF;;;;;;;;;;ACnCH;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,WAAW,GAAG,IAAItB,aAAJ,CAAgB,MAAhB,CAApB;AACAsB,EAAAA,WAAW,CAACC,IAAZ;AACD,CAHD;;AAKAlB,QAAQ,CAACK,gBAAT,CAA0B,kBAA1B,EAA8CW,QAA9C","file":"main.1f19ae8e.map","sourceRoot":"../frontend","sourcesContent":["\nexport default class HTTP {\n  static open(data) {\n    this[data.method](data);\n  }\n\n  static GET(data) {\n    const req = new XMLHttpRequest();\n    const url = `${data.url}/${data.payload}`;\n    req.open(data.method, url, data.async);\n    req.send();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        if (req.status === 200) {\n          console.log(req.responseText);\n        }\n      }\n    };\n  }\n\n  static POST(data) {\n    console.log(data);\n  }\n\n  static DELETE(data) {\n    const req = new XMLHttpRequest();\n    const url = `${data.url}/${data.payload}`;\n    req.open(data.method, url, data.async);\n    req.send();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        if (req.status === 200) {\n          console.log(req.responseText);\n        }\n      }\n    };\n  }\n}\n","import HTTP from './http';\n\nexport default class FormHandler {\n  constructor(selector) {\n    this.selector = selector;\n    this.formsState = [];\n    this.http = new HTTP();\n  }\n\n  init() {\n    this.initListeners();\n  }\n\n  selectForms() {\n    return document.querySelectorAll(this.selector);\n  }\n\n  initListeners() {\n    this.selectForms().forEach((form) => {\n      form.addEventListener('click', (e) => {\n        this.eventListener(e);\n      });\n    });\n  }\n\n  eventListener(e) {\n    if (e.target.nodeName === 'BUTTON') {\n      e.preventDefault();\n      this.http.constructor.open({\n        method: e.currentTarget.id,\n        url: 'http://localhost:8000',\n        async: true,\n        payload: e.currentTarget.querySelector('input').value,\n      });\n    }\n  }\n}\n","import FormHandler from './scripts/form';\n\nconst onLoaded = () => {\n  const formHandler = new FormHandler('form');\n  formHandler.init();\n};\n\ndocument.addEventListener('DOMContentLoaded', onLoaded);\n"]}